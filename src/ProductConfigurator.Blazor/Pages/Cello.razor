@page "/cello"

<Title>
    <TitleText>
        Choose @currentStep.ToString()
    </TitleText>
    <SubtitleText>
        Technological craftsmanship in a natural linen cello case that protects your instrument and your back forever.
    </SubtitleText>
</Title>

<div class="flex flex-col md:flex-row">

    <div class="w-full md:w-2/3">
        <CascadingValue Value="currentStep">

            <Choice Items="CelloFactory.Materials"
                    OnChoiceMade="MaterialChoosen"
                    Step="CelloStepsFactory.Material" />


            <Choice Items="CelloFactory.Colors"
                    OnChoiceMade="ColorChoosen"
                    Step="CelloStepsFactory.Design" />

        </CascadingValue>
    </div>
    <div class="w-full md:w-1/3">
        <CascadingValue Value="itemCollection">
            <Basket GoBackToStep="GoBack">
                <Title>
                    This is your selection for your cello case
                </Title>
            </Basket>
        </CascadingValue>
    </div>
</div>

@if (currentStep == CelloStepsFactory.End)
{
    <p>
        Congratulations! You succeded to configure your case @($"{itemCollection.TotalWithoutVat():C}")
    </p>
    <a @onclick="OnEnd" class="btn btn-primary">Go for it!</a>
}

@code {
    private Step currentStep = CelloStepsFactory.Material;

    private ItemCollection itemCollection;

    protected override void OnInitialized()
    {
        itemCollection = new ItemCollection();
    }

    private void MaterialChoosen(Item item)
    {
        itemCollection.Add(item, currentStep);
        currentStep = CelloStepsFactory.Design;
    }

    private void ColorChoosen(Item item)
    {
        itemCollection.Add(item, currentStep);
        currentStep = CelloStepsFactory.End;
    }


    private void OnEnd()
    {

    }

    private void GoBack(Step step)
    {
        currentStep = step;
    }
}

@page "/accordion"

<Title>
    <TitleText>
        Accordion
    </TitleText>
    <SubtitleText>
        Product configurator
    </SubtitleText>
</Title>

<button @onclick="RemoveLast">
     UPS
    </button>

<div class="flex flex-col md:flex-row">

    <div class="w-full md:w-2/3">
        <CascadingValue Value="currentStep">

            <Choice Items="AccordionFactory.AccordionType"
                    OnChoiceMade="AccordionTypeChoosen"
                    Step="Step.AccordionType" />

            <Choice Items="AccordionFactory.CaseType"
                    OnChoiceMade="CaseTypeChoosen"
                    Step="Step.CaseType" />

            <Choice Items="AccordionFactory.Materials"
                    OnChoiceMade="MaterialChoosen"
                    Step="Step.Material" />

            <Choice Items="AccordionFactory.Finish"
                    OnChoiceMade="FinishChoosen"
                    Step="Step.Finish" />

            <Choice Items="AccordionFactory.Finish"
                    OnChoiceMade="FinishChoosen"
                    Step="Step.Finish" />

            <Choice Items="AccordionFactory.Caps"
                    OnChoiceMade="CapsChoosen"
                    Step="Step.Caps" />

            <Choice Items="AccordionFactory.Colors"
                    OnChoiceMade="ColorChoosen"
                    Step="Step.Color" />

            <Choice Items="AccordionFactory.Designs"
                    OnChoiceMade="DesignChoosen"
                    Step="Step.Design" />

            <Choice Items="AccordionFactory.Accesories"
                    OnChoiceMade="OnEnd"
                    Step="Step.Accesories" />

        </CascadingValue>
    </div>
    <div class="w-full md:w-1/3">
        <CascadingValue Value="itemCollection">
            <Basket>
                <Title>
                    Accordion
                </Title>
            </Basket>
        </CascadingValue>
    </div>
</div>

@if (currentStep == Step.End)
{
    <p>
        Congratulations! You succeded to configure your case @($"{itemCollection.TotalWithoutVat():C}")
    </p>
    <a class="btn btn-primary">Go for it!</a>
}


@code {
    private Step currentStep = Step.AccordionType;

    private ItemCollection itemCollection;

    protected override void OnInitialized()
    {
        itemCollection = new ItemCollection();
    }

    private void AccordionTypeChoosen(Item item)
    {
        itemCollection.Add(item, currentStep);

        if (item.IsPiano)
        {
            itemCollection.Add(AccordionFactory.NewEdition, Step.CaseType);
            currentStep = Step.Material;
        }
        else currentStep = Step.CaseType;
    }

    private void CaseTypeChoosen(Item item)
    {
        itemCollection.Add(item, currentStep);
        currentStep = Step.Material;
    }

    private void MaterialChoosen(Item item)
    {
        itemCollection.Add(item, currentStep);

        if (item.IsCarbon)
        {
            currentStep = Step.Finish;
        }
        else currentStep = Step.Color;
    }

    private void FinishChoosen(Item item)
    {
        itemCollection.Add(item, currentStep);
        currentStep = Step.Design;
    }

    private void ColorChoosen(Item item)
    {
        itemCollection.Add(item, currentStep);
        currentStep = Step.Design;
    }

    private void DesignChoosen(Item item)
    {
        itemCollection.Add(item, currentStep);

        if (itemCollection.WasClasicEditionChoosen())
        {
            currentStep = Step.Caps;
        }
        else currentStep = Step.Accesories;
    }

    private void CapsChoosen(Item item)
    {
        itemCollection.Add(item, currentStep);
        currentStep = Step.Accesories;
    }

    private void OnEnd(Item item)
    {
        itemCollection.Add(item, currentStep);
    }

    private void RemoveLast()
    {
        var lastStep = itemCollection.RemoveLast();
        currentStep = lastStep;
    }
}

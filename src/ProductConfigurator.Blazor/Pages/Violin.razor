@page "/violin"

<Title>
    <TitleText>
        Choose @currentStep.ToString()
    </TitleText>
    <SubtitleText>
        Product configurator
    </SubtitleText>
</Title>

<div class="flex flex-col md:flex-row space-x-2">

    <div class="w-full md:w-2/3">
        <CascadingValue Value="currentStep">

            <Choice Items="ViolinFactory.Materials"
                    OnChoiceMade="MaterialChoosen"
                    Step="ViolinStepsFactory.Material" />

            <Choice Items="ViolinFactory.Finish"
                    OnChoiceMade="DesignChoosen"
                    Step="ViolinStepsFactory.Finish" />

            <Choice Items="ViolinFactory.Colors"
                    OnChoiceMade="ColorChoosen"
                    Step="ViolinStepsFactory.Color" />

            <Choice Items="ViolinFactory.Designs"
                    OnChoiceMade="ExtraColorChoosen"
                    Step="ViolinStepsFactory.Design" />

        </CascadingValue>
    </div>

    <div class="w-full md:w-1/3">
        <CascadingValue Value="itemCollection">
            <Basket>
                <Title>
                    This is your selection for your violin case
                </Title>
            </Basket>
        </CascadingValue>
    </div>

</div>

@if (currentStep == ViolinStepsFactory.End)
{
    <p>
        Congratulations! You succeded to configure your case @($"{itemCollection.TotalWithoutVat():C}")
    </p>
    <a @onclick="OnEnd" class="btn btn-primary">Go for it!</a>
}


@code {
    private Step currentStep = ViolinStepsFactory.Material;

    private ItemCollection itemCollection;

    protected override void OnInitialized()
    {
        itemCollection = new ItemCollection();
    }

    private void MaterialChoosen(Item item)
    {
        itemCollection.Add(item, currentStep);

        if (item.IsCarbon)
        {
            currentStep = ViolinStepsFactory.Design;
        }
        else currentStep = ViolinStepsFactory.Color;
    }

    private void DesignChoosen(Item item)
    {
        itemCollection.Add(item, currentStep);
        currentStep = ViolinStepsFactory.Color;
    }

    private void ColorChoosen(Item item)
    {
        itemCollection.Add(item, currentStep);
        currentStep = ViolinStepsFactory.Design;
    }

    private void ExtraColorChoosen(Item item)
    {
        itemCollection.Add(item, currentStep);
        currentStep = ViolinStepsFactory.End;
    }

    private void OnEnd()
    {

    }
}

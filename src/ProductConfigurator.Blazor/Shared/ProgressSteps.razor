<div class="w-full my-4">
    <div class="flex pb-3">
        <div class="flex-1">
        </div>

        @foreach (var (step, index) in Steps.Select((x, index) => (x, index)))
        {
            <div class="has-tooltip cursor-pointer">
                <span class="tooltip rounded shadow-lg py-1 px-2 bg-gray-100 text-lumasuite -mt-10">
                    @step.ToString()
                </span>
                <div class="flex-1">
                    <div class="w-10 h-10
                         @(CurrentStep == step ?
                           "ring-4 ring-gray-500 bg-gray-100 text-gray-500"
                           : CurrentStep.WasCompleted(step) ? "bg-lumasuite text-white" : "bg-gray-300 text-white"
                          )
                         mx-auto rounded-full text-lg  flex items-center">
                        <ProductConfigurator.Blazor.Shared.Icons.StepIcon Step="step" Style="@IconStyle" />
                    </div>
                </div>
            </div>

            <div class="flex items-center w-full mx-4">
                <div class="w-full rounded items-center align-middle align-center flex-1">
                    <div class="@(CurrentStep.WasCompleted(step) ? "bg-lumasuite" : "bg-gray-300")
                         text-xs leading-none py-1 text-center rounded">
                    </div>
                </div>
            </div>
        }


        <div class="has-tooltip">
            <span class="tooltip rounded shadow-lg p-1 bg-gray-100 text-red-500 -mt-8">
                End
            </span>
            <div class="flex-1">
                <div class="w-10 h-10  @(CurrentStep.Name.Equals(ProductConfigurator.Core.Steps.End) ?
                           "ring-4 ring-gray-500 bg-gray-100 text-gray-500" : "bg-gray-300 text-white")
                     mx-auto rounded-full text-lg text-white flex items-center">
                    <ProductConfigurator.Blazor.Shared.Icons.CreditCardIcon Style="w-6 h-6 m-auto" />
                </div>
            </div>
        </div>


        <div class="flex-1">
        </div>
    </div>
</div>

@code {
    private const string IconStyle = "w-6 h-6 m-auto";

    [CascadingParameter]
    public Step CurrentStep { get; set; }

    [Parameter]
    public List<Step> Steps { get; set; }
}

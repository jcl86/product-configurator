@*https://tailwindcomponents.com/component/simple-product-card-1
https://tailwindcomponents.com/component/product-card-1*@

@if (Step == CurrentStep)
{
    <div class="bg-blue-100 min-h-full rounded-lg shadow mb-8 md:mr-8 md:mb-0">
        <h3 class="font-semibold px-6 pt-4 uppercase tracking-widest">Choose @Step.ToString()</h3>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            @foreach (var item in Items)
            {
                <div class="py-6 max-w-sm w-full m-auto">
                    <div class="mx-4 flex bg-white shadow-lg rounded-lg overflow-hidden">
                        <div class="w-1/3 bg-cover"
                             style="background-image: url('img/test-image.jpg')">
                        </div>
                        <div class="w-2/3 p-4">
                            <h2 class="text-gray-900 font-bold text-2xl">@item.Name</h2>
                            <p class="mt-2 text-gray-600 text-sm">@item.Description</p>

                            <div class="flex item-center justify-between mt-3">
                                <h3 class="text-gray-600 font-bold flex items-end"> @item.PriceText</h3>
                                <a @onclick="() => OnChoiceMade.InvokeAsync(item)"
                                   class="cursor-pointer px-3 py-2 bg-gray-800 text-white text-xs font-bold
                               uppercase rounded bg-lumasuite hover:opacity-75">
                                    Take it!
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}

@code {

    [Parameter]
    public IEnumerable<Item> Items { get; set; }

    [Parameter]
    public Step Step { get; set; }

    [CascadingParameter]
    public Step CurrentStep { get; set; }

    [Parameter]
    public EventCallback<Item> OnChoiceMade { get; set; }
}

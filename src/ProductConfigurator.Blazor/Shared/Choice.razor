@if (Step == CurrentStep)
{
    <h3>Choose @Step.ToString()</h3>
    @*<div class="flex-none w-48 relative">
        <img src="img/test-image.jpg"
             alt=""
             class="absolute inset-0 w-full h-full object-cover" />
    </div>*@
    <div class="flex flex-col md:flex-row justify-around md:space-x-4">
        @foreach (var item in Items)
        {
            <div class="py-6 max-w-sm w-full my-auto">
                <div class="flex bg-white shadow-lg rounded-lg overflow-hidden">
                    <div class="w-1/3 bg-cover"
                         style="background-image: url('img/test-image.jpg')">
                    </div>
                    <div class="w-2/3 p-4">
                        <h2 class="text-gray-900 font-bold text-2xl">@item.Name</h2>
                        <p class="mt-2 text-gray-600 text-sm">@item.Description</p>
               
                        <div class="flex item-center justify-between mt-3">
                            <h3 class="text-gray-600 font-bold flex items-end"> @item.PriceText</h3>
                            <a @onclick="() => OnChoiceMade.InvokeAsync(item)"
                               class="cursor-pointer px-3 py-2 bg-gray-800 text-white text-xs font-bold 
                               uppercase rounded bg-lumasuite hover:opacity-75">
                                Take it!
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

}

@code {

    [Parameter]
    public IEnumerable<Item> Items { get; set; }

    [Parameter]
    public Step Step { get; set; }

    [CascadingParameter]
    public Step CurrentStep { get; set; }

    [Parameter]
    public EventCallback<Item> OnChoiceMade { get; set; }
}

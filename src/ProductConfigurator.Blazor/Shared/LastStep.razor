@inject IJSRuntime jsRuntime

<p class="tracking-wider text-lg text-gray-700 mb-8">
    Congratulations! You succeded to configure your case
</p>

<EditForm Model="model" OnValidSubmit="@HandleValidSubmit">

    <DataAnnotationsValidator />

    <div class="flex flex-col space-y-6">

        <div>
            <div class="max-w-sm">
                <label class="uppercase tracking-wide text-white bg-lumasuite text-xs font-bold mb-2 px-2 py-1 rounded-t">
                    Name
                </label>
                <InputText @attributes=@Style("block w-full border border-gray-400 rounded-b rounded-r py-3 px-4 outline-none focus:border-gray-600")
                           @bind-Value="model.Name" placeholder="Name" />

            </div>
        </div>

        <div>
            <div class="max-w-sm">
                <label class="uppercase tracking-wide text-white bg-lumasuite text-xs font-bold mb-2 px-2 py-1 rounded-t">
                    Email
                </label>
                <InputText @attributes=@Style("block w-full border border-gray-400 rounded-b rounded-r py-3 px-4 outline-none focus:border-gray-600")
                           @bind-Value="model.Email" placeholder="Email" />

            </div>
        </div>

        <div class="text-red-700 italic mb-4">
            <ValidationSummary />
        </div>

        <div class="flex justify-between items-center">


            <button class="flex items-center uppercase px-4 py-2 bg-lumasuite text-white text-lg
                    cursor-pointer rounded outline-none focus:outline-none"
                    type="submit">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z">
                    </path>
                </svg>
                <span class="ml-2 hidden md:block">
                    Order Now
                </span>
            </button>

        </div>
    </div>

</EditForm>


@code {

    private OrderRequest model = new OrderRequest();

    [CascadingParameter]
    public ItemCollection ItemCollection { get; set; }

    private async Task HandleValidSubmit()
    {
        string body = new HtmlBasketRenderer(ItemCollection).Render();
        await jsRuntime.InvokeAsync<object>("blazorExtensions.SendLocalEmail",
        new object[] { "info@lumasuite.com", "Order from desing-your-lumasuite-case", body });
    }

    public static Dictionary<string, object> Style(string style)
    {
        return new Dictionary<string, object>
        {
            { "class", style }
        };
    }
}
